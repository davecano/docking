<?xml version="1.0" encoding="utf-8" ?>
<configuration >
    <appender name="CONSOLE-LOG" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>[%d {yyyy-MM-dd HH:mm:ss.sss}] [%C] [%t] [%L] [%-5p] %m%n </pattern>
        </layout>
    </appender>

    <!--获取比info级别高（包含info级别）但除了error级别的日志-->
    <appender name="INFO-LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>log/info.log</File>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>DENY</onMatch>
            <onMismatch>ACCEPT</onMismatch>
        </filter>
        <encoder>
            <pattern>[%d{yyyy-MM-dd HH:mm:ss.sss}] [%C] [%t] [%L] [%-5p] %m%n </pattern>
        </encoder>
        <!--滚动策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--路径 按小时切割文件-->
            <fileNamePattern>log//%d{yyyy-MM-dd.HH}.log</fileNamePattern>
            <!--72 小时-->
            <maxHistory>72</maxHistory>
        </rollingPolicy>

    </appender>
    <!--appender 通过使用该标签指定日志的收集策略 name属性指定命名-->
    <!--class属性 指定输出策略  通常有两种 控制台输出和文件输出 -->

    <appender name="ERROR-LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>log/error.log</File>
        <!--filter 指定过滤策略-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <!--level 指定过滤的类型-->
            <level>ERROR</level>
        </filter>
        <!--encoder 使用该标签下的标签 指定日志输出格式-->
        <encoder>
            <!--pattern 指定日志输出格式-->
            <pattern>[%d{yyyy-MM-dd HH:mm:ss.sss}] [%C] [%t] [%L] [%-5p] %m%n </pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>log/error.%d{yyyy-MM-dd.HH}.log</fileNamePattern>
            <maxHistory>30</maxHistory>
        </rollingPolicy>

    </appender>


    <!--异步输出-->
    <appender name="ASYNC-INFO" class="ch.qos.logback.classic.AsyncAppender">
        <!--不丢失日志，默认的，如果队列的80%已满 则会丢弃TRACT、DEBUG、INFO级别的日志-->
        <discardingThreshold>0</discardingThreshold>
        <!--队列深度 默认256 该值会影响性能-->
        <queueSize>256</queueSize>
        <!--添加附加的appender，最多只能添加一个-->
        <appender-ref ref="INFO-LOG"/>
    </appender>

    <appender name="ASYNC-ERROR" class="ch.qos.logback.classic.AsyncAppender">
        <!--不丢失日志，默认的，如果队列的80%已满 则会丢弃TRACT、DEBUG、INFO级别的日志-->
        <discardingThreshold>0</discardingThreshold>
        <!--队列深度 默认256 该值会影响性能-->
        <queueSize>256</queueSize>
        <!--添加附加的appender，最多只能添加一个-->
        <appender-ref ref="ERROR-LOG"/>
    </appender>




    <!--root标签 必填便签 用来指定最基础的日志输出级别-->
    <root level="info">
        <!--添加appender便签-->
        <appender-ref ref="CONSOLE-LOG"/>
        <appender-ref ref="INFO-LOG"/>
        <appender-ref ref="ERROR-LOG"/>

    </root>


</configuration>